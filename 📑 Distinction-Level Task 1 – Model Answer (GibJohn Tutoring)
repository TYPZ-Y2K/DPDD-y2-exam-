ðŸ“‘ Distinction-Level Task 1 â€“ Model Answer (GibJohn Tutoring)
________________________________________
Part A â€“ Analysis
1. Introduction
The purpose of this document is to analyse the needs of GibJohn Tutoring and propose a digital solution that addresses their requirements. This includes exploring existing platforms, identifying functional and non-functional requirements, and ensuring legal, regulatory, and professional compliance.
Client: GibJohn Tutoring provides face-to-face tutoring and learning resources.
Objectives: Create a digital platform that supports interactive resources, wider learning, and progress monitoring.
Link to business goals: Extend reach, improve learner engagement, and futureproof services with emerging technologies.
________________________________________
2. Analysis of Existing Solutions
Strengths:
â€¢	Khan Academy â†’ strong content variety and assessments.
â€¢	Duolingo â†’ effective gamification.
Weaknesses:
â€¢	Limited accessibility options.
â€¢	Lack of deep personalisation.
Opportunities:
â€¢	Introduce AI-driven personalisation.
â€¢	Accessibility-first design.
â€¢	Gamified rewards tied to learning outcomes.
Justification: A new solution is needed to combine the strengths of existing platforms with accessibility, compliance, and tailored learning for GibJohnâ€™s audience.
________________________________________
3. Emerging Technologies
â€¢	AI: Adaptive quizzes, automated marking.
â€¢	IoT: Smart classroom devices linking to the platform.
â€¢	AR/VR: Virtual lab experiments and immersive subject exploration.
â€¢	Cloud computing: Scalable, cost-efficient hosting.
Integration: AI and Cloud included immediately; IoT and AR/VR reserved for future iterations.
________________________________________
4. Business Context
Overview: Tutoring company expanding digitally.
Goals: Wider access, improved engagement, measurable learner progress.
Audience: Learners (school-aged), tutors, guardians.
Constraints: Budget, compliance with GDPR/Equality Act, phased implementation.
________________________________________
5. Requirements Analysis
Functional Requirements
â€¢	Learner registration and login.
â€¢	Tutor uploads and resource sharing.
â€¢	Progress tracking dashboards.
â€¢	Reward system for achievements.
Non-Functional Requirements
â€¢	Secure (password hashing, HTTPS).
â€¢	Accessible (WCAG 2.1).
â€¢	Reliable (99.9% uptime).
â€¢	Usable (simple navigation, responsive).
KPIs
â€¢	< 2s page load time.
â€¢	99.9% uptime.
â€¢	80% weekly active learner usage.
â€¢	90% satisfaction in UAT.
MoSCoW
â€¢	Must: Login, progress tracking, content delivery.
â€¢	Should: Rewards and accessibility features.
â€¢	Could: AI-driven personalisation.
â€¢	Wonâ€™t: VR integration at launch.
________________________________________
6. Problem Decomposition
Modules:
â€¢	Authentication.
â€¢	Resource Management.
â€¢	Progress Tracking.
â€¢	Reward System.
â€¢	Admin Dashboard.
System Architecture:
Frontend (React) â†’ Backend (Django) â†’ Database (MySQL)
           â†˜   AI Analytics Engine   â†™
Inputs: user credentials, content, progress data.
Processes: validation, storage, tracking, analysis.
Outputs: dashboards, reports, rewards.
________________________________________
7. Proposed Solution
â€¢	Stack: React (frontend), Django (backend), MySQL (database).
â€¢	Hosting: AWS Cloud.
â€¢	Security: Encrypted logins, HTTPS, role-based access.
â€¢	Emerging Tech: AI for adaptive learning, Cloud for scalability.
Justification: Secure, scalable, industry-standard technologies aligned to GibJohnâ€™s needs.
________________________________________
8. Legal & Regulatory Compliance
Law / Standard	Requirement	How Addressed
GDPR	Protect learner data	Encryption, consent, anonymisation
Equality Act 2010	Accessibility	WCAG 2.1 compliance, screen reader support
Consumer Rights Act	Transparent, fair terms	Clear T&Cs, opt-out options
Copyright/IP law	Respect ownership	Licensed resources, attribution
W3C Standards	Accessible web design	Semantic HTML, ARIA roles
________________________________________
9. Professional and Ethical Standards
Aligned with BCS Code of Conduct:
â€¢	Public interest: Accessibility-first design.
â€¢	Integrity: Transparent handling of learner data.
â€¢	Competence: Secure, reliable development practices.
â€¢	Privacy: GDPR-compliant data storage.
________________________________________
10. Justification of Design Choices
â€¢	React: Responsive, fast, widely supported frontend.
â€¢	Django: Secure backend with authentication.
â€¢	MySQL: Relational database suitable for structured learner/tutor data.
â€¢	AWS: Scalability and uptime guarantees.
â€¢	UI/UX: Chosen for accessibility, readability, and cross-device use.
________________________________________
11. Risk Assessment
Risk	Impact	Likelihood	Mitigation
Data breach	High	Medium	Encryption, 2FA
Missed deadlines	Medium	High	Agile sprints, weekly reviews
System downtime	High	Low	Cloud redundancy, monitoring
Low learner uptake	Medium	Medium	Gamification, user testing
Copyright infringement	High	Medium	Use licensed materials only
________________________________________
Part B â€“ Design
12. Interface Design
Wireframes:
â€¢	Login Page (credentials).
â€¢	Dashboard (progress bars, resources, rewards).
â€¢	Tutor Portal (upload + learner tracking).
Navigation Flow: Login â†’ Dashboard â†’ Content â†’ Assessment â†’ Rewards.
Justification: WCAG 2.1 compliance, clear layout, responsive for mobile/tablet.
________________________________________
13. Data Design
ERD:
â€¢	Entities: User, Tutor, Resource, Progress, Reward.
â€¢	Relationships: One user â†’ many progress records, one tutor â†’ many resources.
Data Dictionary Example:
Entity	Attribute	Type	Example
User	userID	INT PK	101
User	email	VARCHAR	user@mail.com
Progress	score	INT	85
Reward	points	INT	150
Error handling: input validation, length limits, clear error messages.
________________________________________
14. Algorithm Design
1. Registration
Input: username, password
Hash password
Store in database
2. Login
Input credentials
Hash + compare
If match â†’ dashboard
Else â†’ error
3. CRUD (Resource Upload)
If tutor role verified
Accept file
Insert into DB
4. Reward System
If learner completes activity
Add points to profile
Check milestones â†’ award badge
5. Feedback Submission
Input text
Validate + store in DB
Notify tutor
________________________________________
15. Test Strategy
Test Levels:
â€¢	Unit â†’ login, resource upload.
â€¢	Integration â†’ login + DB â†’ dashboard.
â€¢	UAT â†’ solution vs KPIs with end users.
Test Data: normal, erroneous, extreme (boundary) inputs.
Sample Test Cases:
Test Case	Input	Expected Output
Login valid	Correct creds	Dashboard loads
Login invalid	Wrong pass	Error message
Add resource	Upload PDF	Resource visible
Progress update	Complete quiz	Dashboard shows new score
Order: Unit â†’ Integration â†’ UAT.
________________________________________
Distinction-Level Extras
âœ” Compliance mapping table (Legal & Regulatory).
âœ” Diagrams (wireframes, ERD, flowcharts).
âœ” Explicit BCS Code of Conduct reference.
âœ” Emerging tech (AI now, AR/VR later).
âœ” Justification of all design decisions.
âœ” Structured, professional communication for technical + non-technical readers.
